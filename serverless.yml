service: serverless-haskell-sandbox

provider:
  name: aws
  runtime: haskell
  timeout: 30
  region: ap-northeast-1
  memorySize: 256
  environment:
      FIRST_TABLE: ${self:provider.stage}_FirstTable

  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:*
    Resource:
        # - Fn::GetAtt: [ FirstTable, Arn ]
    - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  env:
    handler: serverless-haskell-sandbox.env
    events:
      - http:
          path: env
          method: get
  hello:
    handler: serverless-haskell-sandbox.hello # <serviceの値>.<exeの名前>
    events:
      - http:
          path: hello
          method: get
  echo:
    handler: serverless-haskell-sandbox.echo
    events:
      - http:
          path: echo/{name}
          method: get
  http:
    handler: serverless-haskell-sandbox.http
    events:
      - http:
          path: http
          method: get
  postData:
    handler: serverless-haskell-sandbox.postData
    events:
      - http:
          path: data/
          method: post
  getData:
    handler: serverless-haskell-sandbox.getData
    events:
      - http:
          path: data/
          method: get
  s3:
    handler: serverless-haskell-sandbox.s3
    events:
      - http:
          path: s3/
          method: get
  byjs:
    runtime: nodejs6.10
    handler: handler.hello
    events:
      - http:
          path: byjs/
          method: get

resources:
  Resources:
    FirstTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.FIRST_TABLE}

plugins:
  - serverless-haskell
